user nginx;  # 运行用户，为必备配置项
worker_processes 1; # 启动工作进程数量，通常设置为可用的 CPU 内核数，为优化配置项

# 错误日志文件的路径与级别，为调试配置项
error_log /var/log/nginx-error.log warn; 

# pid  logs/nginx.pid; # 定义 PID 文件位置，为必备配置项

# 事件配置块上下文，其中指定影响连接处理的指令。
events {
    worker_connections 2048; # 设置一个工作进程可以打开的同时连接的最大数量。默认为 1024
}
http {
     # 设置 mime 的类型，类型由 mime.type 文件定义
     include       /etc/nginx/mime.types;
     default_type  application/octet-stream;

     # 设定日志格式
     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';

     access_log  /var/log/nginx/access.log  main;

     # sendfile 指令指定 nginx 是否调用 sendfile 函数来输出文件，
     # 对于普通应用，必须设为 on,
     # 如果用来进行下载等应用磁盘 IO 重负载应用，可设置为 off，
     # 以平衡磁盘与网络 I/O 处理速度，降低系统的 uptime
     sendfile        on;
     #tcp_nopush     on;

     # 连接超时时间
     keepalive_timeout  65;

     # 开启 gzip 压缩
     # gzip  on;

     # 设置负载均衡 包含多种算法（轮询,权重,ip_hash)
     upstream xdaili {
          server 10.60.10.200:80;
          server 10.60.10.201:80;
          #ip_hash;
     }
     
     # 设置虚拟主机配置
     server {
         # 侦听 80 端口
         listen    80;
         # 设置虚拟服务器的名称
         server_name  www.nginx.cn;

         # 定义服务器的默认网站根目录位置
         root /data/www/html;

         # 设定本虚拟主机的访问日志路径与级别
         access_log  logs/nginx.access.log  main;

         # location 块命令，根据请求目录或文件配置处理的行为

         # location / 表示当访问根目录时所做的行为
         location / {
             # 按顺序查找访问的 uri 文件是否存在，或者相关的目录，若是不存在则返回 404
             try_files $uri $uri/ =404;
         }
         ……
     }

     server {
         listen 8080;
         root /var/www/html;
         location / {
             proxy_pass http://xdaili;
         }
     }

     # 包含 /etc/nginx/conf.d 下的所有以 conf 结尾的配置文件
     include /etc/nginx/conf.d/*.conf;
 }

